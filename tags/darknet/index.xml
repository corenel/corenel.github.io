<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Darknet on Yuthon&#39;s Blog</title>
    <link>https://www.yuthon.com/tags/darknet/</link>
    <description>Recent content in Darknet on Yuthon&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Sat, 03 Dec 2016 11:29:04 +0000</lastBuildDate>
    
	<atom:link href="https://www.yuthon.com/tags/darknet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Train YOLOv2 on my own dataset</title>
      <link>https://www.yuthon.com/post/practices/train-yolov2-on-my-own-dataset/</link>
      <pubDate>Sat, 03 Dec 2016 11:29:04 +0000</pubDate>
      
      <guid>https://www.yuthon.com/post/practices/train-yolov2-on-my-own-dataset/</guid>
      <description>&lt;p&gt;最近在看 Darkflow 的时候, 发现连 YOLOv2 都出了, 据称 mAP 和速度都提升了不少, 立马 clone 下来试了一番.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Train Caffe-YOLO on our own dataset</title>
      <link>https://www.yuthon.com/post/practices/train-caffe-yolo-on-our-own-dataset/</link>
      <pubDate>Sat, 26 Nov 2016 18:11:14 +0000</pubDate>
      
      <guid>https://www.yuthon.com/post/practices/train-caffe-yolo-on-our-own-dataset/</guid>
      <description>&lt;p&gt;经过这几天不断地测试, YOLO 在 TX1 上跑得还是挺不错的, 符合我们实验室的要求. 但是 YOLO 依赖的 Darknet 框架还是太原始了, 不如 TensorFlow 或者 Caffe 用着顺手. 另外, 我负责的目标检测这一块还需要和梅老板写的新框架相结合, 所以更加需要把 YOLO 移植到一个成熟的框架上去.&lt;/p&gt;

&lt;p&gt;很幸运的是, YOLO 在各个框架上的移植都有前人做过了, 比如 &lt;a href=&#34;https://github.com/thtrieu/darktf&#34;&gt;darktf&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/yeahkun/caffe-yolo&#34;&gt;caffe-yolo&lt;/a&gt;. 今天以 caffe-yolo 为例, 谈一下在其上使用自己的数据集来训练.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Notes for YOLO</title>
      <link>https://www.yuthon.com/post/papers/notes-for-yolo/</link>
      <pubDate>Fri, 18 Nov 2016 22:43:26 +0000</pubDate>
      
      <guid>https://www.yuthon.com/post/papers/notes-for-yolo/</guid>
      <description>&lt;p&gt;前几天发烧流鼻涕, 睡不了觉, 因此就熬夜读完了 YOLO 的论文. 可以说, YOLO 的实现方式相较于之前 R-CNN 一系的 Region Proposal 的方法来说, 很有新意. YOLO 将 Classification 和 Bounding Box Regression 合起来放进了 CNN 的输出层里面, 从而大大加快了速度.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Train YOLO on our own dataset</title>
      <link>https://www.yuthon.com/post/practices/train-yolo-on-our-own-dataset/</link>
      <pubDate>Sat, 12 Nov 2016 11:20:22 +0000</pubDate>
      
      <guid>https://www.yuthon.com/post/practices/train-yolo-on-our-own-dataset/</guid>
      <description>&lt;p&gt;之前到手 TX1 之后试了一下 YOLO 的 Demo, 感觉很是不错, 帧数勉强达到实时要求, 因此就萌生了使用自己的数据集来训练看看效果的想法.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>YOLO on NVIDIA Jetson TX1</title>
      <link>https://www.yuthon.com/post/practices/yolo-on-nvidia-jetson-tx1/</link>
      <pubDate>Thu, 10 Nov 2016 20:36:34 +0000</pubDate>
      
      <guid>https://www.yuthon.com/post/practices/yolo-on-nvidia-jetson-tx1/</guid>
      <description>&lt;p&gt;实验室昨天到了 NVIDIA 的 &lt;a href=&#34;http://www.nvidia.com/object/jetson-tx1-module.html&#34;&gt;Jetson TX1&lt;/a&gt;, 可以说是移动端比较好的带GPU的开发板子了, 于是可以试试在移动端上用YOLO (You Look Only Once) 来做目标识别.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>